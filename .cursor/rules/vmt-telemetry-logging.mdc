---
alwaysApply: true
description: VMT Telemetry and SQLite Logging System
---

# VMT Telemetry System

## SQLite Database Logging

- **Location:** [src/telemetry/](mdc:src/telemetry/) directory
- **Database:** Local SQLite file (no external dependencies)
- **Compression:** ~99% size reduction over CSV
- **Performance:** Sub-second query times

## Logged Data Tables

### Core Tables
- **runs** - Simulation metadata (seed, scenario, timestamps)
- **agent_snapshots** - Agent states per tick (position, inventory, quotes)
- **resource_snapshots** - Grid resource levels per tick
- **tick_states** - System state (mode, regime, active_pairs)

### Trading Data
- **trades** - Individual trade events (agents, goods, money, prices)
- **trade_events** - Detailed trade execution logs
- **preferences** - Agent preference rankings (with pair_type)
- **pairing_events** - Pair formation/dissolution events

## Key Files

- **Database Schema:** [src/telemetry/database.py](mdc:src/telemetry/database.py)
- **Loggers:** [src/telemetry/db_loggers.py](mdc:src/telemetry/db_loggers.py)
- **Log Viewer:** [src/vmt_log_viewer/](mdc:src/vmt_log_viewer/) - PyQt6 GUI

## Log Viewer Features

- **Real-time Analysis:** View simulation data during/after runs
- **Money Analytics:** Histograms of money balances, Î» trajectories
- **Trade Analysis:** Exchange pair distributions, surplus tracking
- **Export Options:** CSV export for external analysis

## Usage

```python
# View logs with GUI
python -m src.vmt_log_viewer.main

# Or use the launcher's log viewer tab
python launcher.py
```

## Data Analysis

- **Query Interface:** SQL queries for custom analysis
- **Visualization:** Built-in charts and graphs
- **Export:** CSV format for external tools
- **Reproducibility:** All data tied to specific runs/seeds