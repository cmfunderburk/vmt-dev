---
alwaysApply: true
---
# VMT Architecture & Project Structure

This document provides a high-level overview of the VMT codebase structure.

The project is structured into several key directories, primarily under `src/`:

- **`src/vmt_engine/`**: The core simulation engine. This is where the primary logic resides.
    - `core/`: Fundamental state objects and data structures (`agent.py`, `grid.py`, `state.py`).
    - `econ/`: Core economic logic, such as utility functions (`utility.py`).
    - `systems/`: Implementations of the major simulation phases, including matching, quoting, and movement logic.
    - `simulation.py`: The main simulation loop that orchestrates the 7-phase tick cycle.

- **`src/scenarios/`**: Python code responsible for loading and validating scenario YAML files. The authoritative schema definitions are located in [src/scenarios/schema.py](mdc:src/scenarios/schema.py).

- **`src/telemetry/`**: The high-performance SQLite logging system. The complete database schema is defined via `CREATE TABLE` statements in [src/telemetry/database.py](mdc:src/telemetry/database.py).

- **`src/vmt_launcher/`**: The source for the user-friendly PyQt5 GUI used to launch scenarios.

- **`src/vmt_log_viewer/`**: The source for the PyQt5 GUI used to view and analyze simulation data from the telemetry database.

- **`scenarios/`**: (Root directory) User-facing `.yaml` files that define specific simulation setups.

- **`tests/`**: The comprehensive Pytest test suite, with over 75 tests covering all major systems, including integration, performance, and economic correctness tests.