---
alwaysApply: true
---
# VMT Core Principles

This project adheres to a set of strict core principles to ensure scientific validity and reproducibility.

## The 7-Phase Tick Cycle
The simulation engine operates on a strict, deterministic 7-phase tick cycle. This order is crucial for reproducibility and is **never changed**.
1.  **Perception**: Agents observe a frozen snapshot of the environment (neighbors, resources).
2.  **Decision**: Agents decide actions, select forage targets (resource claiming), and form trade partnerships using the 3-pass pairing algorithm.
3.  **Movement**: Agents move towards their chosen targets.
4.  **Trade**: Paired agents within interaction radius attempt trades using a generic, money-aware matching algorithm that supports barter (A↔B) and monetary (A↔M, B↔M) exchange.
5.  **Foraging**: Agents harvest resources from their current cell. Paired agents skip foraging. A single-harvester rule is enforced to prevent multiple agents from harvesting the same cell in one tick.
6.  **Resource Regeneration**: Harvested resources regenerate over time according to scenario parameters.
7.  **Housekeeping**: Quotes are refreshed if inventories changed, internal state is cleaned up, and all data is logged to the telemetry database.

For a complete description, see the [Technical Manual](mdc:docs/2_technical_manual.md).

## Determinism
The simulation is 100% deterministic. Given the same scenario file and the same seed, the simulation will produce the exact same outcome every time. This is a non-negotiable feature achieved through several strict rules:
- The fixed 7-phase tick order.
- **Sorted Iteration**: All loops over agents or potential trade pairs are sorted by `agent.id` or `(min_id, max_id)`. There is no reliance on non-deterministic data structures (like standard Python dictionaries before 3.7) for iteration.
- **Deterministic Tie-Breaking**: Any situation that could be ambiguous (e.g., movement path choice, resource claim priority) is resolved with a fixed, documented rule, typically based on the lowest `agent.id`.