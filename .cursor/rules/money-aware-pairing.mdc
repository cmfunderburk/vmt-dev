---
description: Guidance for implementing money-aware pairing/search and keeping determinism
---
# Money-Aware Pairing and Search Scoring

Context:
- Decision pairing currently ranks neighbors using barter-only surplus via [src/vmt_engine/systems/matching.py](mdc:src/vmt_engine/systems/matching.py) `compute_surplus`, while trading in money/mixed regimes is money-aware via `find_best_trade` / `find_all_feasible_trades`.

Guidelines:
- When `exchange_regime` ∈ {"money_only","mixed"}, prefer a money-aware neighbor score derived from allowed pairs.
- Determinism constraints:
  - Evaluate neighbors in a stable order; sort candidates by (-score, partner_id).
  - Avoid mid-tick quote mutation; rely on quotes snapshot.
- Performance:
  - Prefer a lightweight estimator for neighbor scores (reuse quotes/MU/λ where possible).
  - If calling `find_best_trade` per neighbor, cap attempts or short-circuit when no overlap exists.

Acceptance:
- Barter-only scenarios remain bit-identical.
- Money-only/mixed scenarios produce partner rankings consistent with feasible monetary trades.

References:
- Decision pass building preferences: [src/vmt_engine/systems/decision.py](mdc:src/vmt_engine/systems/decision.py)
- Matching primitives: [src/vmt_engine/systems/matching.py](mdc:src/vmt_engine/systems/matching.py)
- Quotes: [src/vmt_engine/systems/quotes.py](mdc:src/vmt_engine/systems/quotes.py)