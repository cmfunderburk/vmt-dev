---
alwaysApply: true
---

# VMT Test Execution Pattern

## Critical: Always Use Virtual Environment

**NEVER run Python commands outside the virtual environment.** Always use this pattern:

```bash
bash -c "source venv/bin/activate && python -m pytest [test_files] [options]"
```

## Why This Pattern?

The shell environment in Cursor may not be bash by default, so `source venv/bin/activate` doesn't work directly. Using `bash -c` ensures proper venv activation and command execution.

## Test Execution Examples

### Single test file
```bash
bash -c "source venv/bin/activate && python -m pytest tests/test_greedy_surplus_matching.py -v"
```

### Multiple test files
```bash
bash -c "source venv/bin/activate && python -m pytest tests/test_greedy_surplus_matching.py tests/test_myopic_search.py -v --tb=short"
```

### All tests
```bash
bash -c "source venv/bin/activate && python -m pytest tests/ -v"
```

### Specific test class/method
```bash
bash -c "source venv/bin/activate && python -m pytest tests/test_greedy_surplus_matching.py::TestGreedySurplusMatchingInterface::test_has_required_properties -v"
```

## Python Commands Pattern

For any Python command that needs venv, use the same pattern:

```bash
bash -c "source venv/bin/activate && python [script] [args]"
```

## Anti-Patterns (Never Do These)

- ❌ Running pytest without venv activation
- ❌ Trying to activate venv in separate commands (shell state may not persist)
- ❌ Using `python -m pytest` directly without `bash -c` wrapper
- ❌ Running Python commands outside venv (non-reproducible, may not work)
