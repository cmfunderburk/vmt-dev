---
alwaysApply: true
description: VMT Development Workflow and Best Practices
---

# VMT Development Workflow

## Project Status (Updated 2025-10-22)

### Completed Features
- âœ… **P0 Money-Aware Pairing** - Resolved pairing-trading mismatch
- âœ… **Core 7-Phase Engine** - Deterministic simulation loop
- âœ… **5 Utility Functions** - CES, Linear, Quadratic, Translog, Stone-Geary
- âœ… **Money System** - Quasilinear utility with Î» parameters
- âœ… **SQLite Telemetry** - Comprehensive logging system
- âœ… **PyQt6 GUI** - Scenario browser and launcher
- âœ… **316+ Tests** - Comprehensive test coverage

### Deferred Features
- ðŸ”„ **Mixed Liquidity Gated** - Planned for future development
- ðŸ”„ **Performance Benchmarks** - Pending developer action
- ðŸ”„ **Missing Documentation** - Will be created as needed

## Development Guidelines

### Code Quality Standards
- **Type Safety:** 100% Mypy type coverage goal
- **Formatting:** Black for consistent style
- **Linting:** Ruff for code quality
- **Testing:** All new features require tests

### Versioning Strategy
- **No SemVer** until developer manually pushes 0.0.1 prerelease
- **Date-Based Tracking:** Use descriptive commit messages
- **Manual Release:** Developer controls all versioning

### Architecture Principles
- **Determinism First:** All code must preserve reproducibility
- **7-Phase Order:** Never change phase sequence
- **Backward Compatibility:** Preserve existing behavior
- **Performance Trade-offs:** Acceptable for pedagogical scale

## Key Development Files

- **Main Engine:** [src/vmt_engine/simulation.py](mdc:src/vmt_engine/simulation.py)
- **Decision Logic:** [src/vmt_engine/systems/decision.py](mdc:src/vmt_engine/systems/decision.py)
- **Trading System:** [src/vmt_engine/systems/trading.py](mdc:src/vmt_engine/systems/trading.py)
- **Utility Functions:** [src/vmt_engine/econ/utility.py](mdc:src/vmt_engine/econ/utility.py)
- **Scenario Schema:** [src/scenarios/schema.py](mdc:src/scenarios/schema.py)

## Testing Workflow

```bash
# Run all tests
pytest

# Run specific test categories
pytest tests/test_money_phase1_integration.py
pytest tests/test_pairing_money_aware.py

# Check code quality
black --check .
ruff check .
mypy src/
```

## Documentation

- **Project Overview:** [docs/1_project_overview.md](mdc:docs/1_project_overview.md)
- **Technical Manual:** [docs/2_technical_manual.md](mdc:docs/2_technical_manual.md)
- **Scenario Guide:** [docs/scenario_configuration_guide.md](mdc:docs/scenario_configuration_guide.md)
- **Research Analysis:** [docs/DEEP/research_gpt_project_overview.md](mdc:docs/DEEP/research_gpt_project_overview.md)