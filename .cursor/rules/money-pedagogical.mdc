---
description: Pedagogical goals and demo scenario requirements for money system
---

# Money System Pedagogical Guidelines

## Teaching Objectives

### Core Economic Concepts to Demonstrate
1. **Why Money Emerges**: Show how money reduces transaction costs vs. barter
2. **Price Discovery**: Demonstrate λ convergence and price formation
3. **Market Thickness**: Illustrate how liquidity affects exchange types
4. **Institutional Preference**: Model real-world preference for monetary exchange
5. **Time Constraints**: Show interaction between temporal and exchange constraints

### Target Audiences
- **Undergraduate Economics**: Basic money vs. barter, price formation
- **Graduate Economics**: KKT conditions, endogenous price discovery
- **Experimental Economics**: Agent-based market dynamics
- **Computer Science**: Distributed price discovery algorithms

## Required Demo Scenarios

**Note**: Demo scenarios will be created during Phase 2 implementation. The following are planned specifications:

### Demo 1: Simple Monetary Exchange (Planned)
**File**: `scenarios/demos/demo_01_simple_money.yaml`

**Purpose**: "Why money?"
- 3 agents with clear complementary needs
- Agent 0: Has A, needs B
- Agent 1: Has B, needs A  
- Agent 2: Has money, facilitates exchange

**Key Insights**:
- Without money: double coincidence of wants problem
- With money: indirect exchange solves coordination
- Money as medium of exchange

**Configuration**:
```yaml
exchange_regime: money_only
money_mode: quasilinear
agents: 3
initial_inventories:
  A: [10, 0, 5]
  B: [0, 10, 5]
  M: [50, 50, 100]
```

### Demo 2: KKT Convergence
**File**: `scenarios/demos/demo_02_kkt_convergence.yaml`

**Purpose**: "How do agents learn prices?"
- 10+ agents with varied endowments
- KKT mode with λ estimation
- Show λ trajectories converging

**Key Insights**:
- Agents discover marginal utility of money
- Prices emerge from local interactions
- No central authority needed

**Configuration**:
```yaml
exchange_regime: money_only
money_mode: kkt_lambda
lambda_update_rate: 0.2
lambda_bounds:
  lambda_min: 0.000001
  lambda_max: 1000000.0
```

**Visualization Required**:
- λ trajectory plots
- Price convergence graphs
- Heat map of λ values

### Demo 3: Mixed Regime Dynamics
**File**: `scenarios/demos/demo_03_mixed_regime.yaml`

**Purpose**: "When is barter efficient?"
- Both money and barter allowed
- Show coexistence of exchange types
- Demonstrate tie-breaking policy

**Key Insights**:
- Money preferred when available (tie-breaking)
- Barter persists for high-surplus trades
- Market segmentation by exchange type

**Configuration**:
```yaml
exchange_regime: mixed
# Varied money holdings to create heterogeneity
initial_inventories:
  M: [100, 100, 50, 50, 0, 0]  # Some agents money-rich, some money-poor
```

### Demo 4: Liquidity Zones
**File**: `scenarios/demos/demo_04_liquidity_zones.yaml`

**Purpose**: "Market thickness and exchange types"
- Spatial heterogeneity in agent density
- Liquidity gating enabled
- Show barter emergence in thin markets

**Key Insights**:
- Dense areas: money dominates
- Sparse areas: barter emerges
- Liquidity depth affects market structure

**Configuration**:
```yaml
exchange_regime: mixed_liquidity_gated
liquidity_gate:
  min_quotes: 3
N: 30  # Large grid
agents: 12  # Sparse population
```

**Spatial Setup**:
- Cluster some agents in one corner (liquid zone)
- Spread others across grid (illiquid zones)
- Observe different exchange patterns

### Demo 5: Mode Schedule × Money
**File**: `scenarios/demos/demo_05_mode_schedule_money.yaml`

**Purpose**: "Time constraints with monetary exchange"
- Alternating forage/trade modes
- Money system active
- Show two-layer control architecture

**Key Insights**:
- Temporal constraints (when to trade)
- Exchange constraints (what to trade)
- Orthogonal control systems

**Configuration**:
```yaml
mode_schedule:
  type: global_cycle
  forage_ticks: 10
  trade_ticks: 15
  start_mode: forage

params:
  exchange_regime: mixed
  money_mode: quasilinear
```

## Classroom Exercises

### Exercise 1: Money Supply Experiment
**Question**: How does initial money supply affect market outcomes?

**Setup**:
1. Run same scenario with M = [10, 10, ...] (scarce money)
2. Run with M = [1000, 1000, ...] (abundant money)
3. Compare price levels and trade volumes

**Learning Outcome**: Quantity theory of money intuition

### Exercise 2: λ Shock Analysis
**Question**: What happens when agents' λ values are perturbed?

**Setup**:
1. Run KKT scenario to convergence
2. Manually set some agents' λ to extreme values
3. Observe reconvergence

**Learning Outcome**: Market resilience and price discovery

### Exercise 3: Regime Comparison
**Question**: Which exchange regime is most efficient?

**Setup**:
1. Same initial conditions
2. Run with each regime
3. Compare total utility, trade count, convergence speed

**Metrics to Track**:
- Total surplus generated
- Number of trades
- Final utility distribution
- Gini coefficient

### Exercise 4: Liquidity Crisis Simulation
**Question**: What happens when money becomes scarce?

**Setup**:
1. Start with normal money supply
2. Gradually reduce M for some agents
3. Observe shift to barter

**Learning Outcome**: Financial crisis dynamics

## Visualization Requirements

### Essential Plots
1. **λ Trajectories**: Time series per agent
2. **Price Convergence**: Aggregate price levels over time
3. **Trade Type Distribution**: Pie chart of exchange pairs
4. **Mode Timeline**: Color-coded temporal state
5. **Liquidity Heat Map**: Spatial depth visualization

### Interactive Elements
- Slider for time navigation
- Toggle for different visualization layers
- Agent selection for detailed view
- Comparative views for different runs

## Documentation for Instructors

### Quick Start Guide
```markdown
# Teaching with VMT Money System

## 10-Minute Demo
1. Load demo_01_simple_money.yaml
2. Run for 50 ticks
3. Show how money enables trade
4. Discussion: Why not just barter?

## Full Class Session (50 minutes)
1. Introduction: Barter problems (10 min)
2. Demo 1: Simple money (10 min)
3. Demo 2: Price discovery (15 min)
4. Exercise: Vary money supply (10 min)
5. Discussion and Q&A (5 min)

## Multi-Week Module
Week 1: Money as medium of exchange
Week 2: Price discovery and λ estimation
Week 3: Market thickness and liquidity
Week 4: Student projects with custom scenarios
```

### Discussion Questions

**Foundational**:
1. Why did money evolve historically?
2. What properties make something good money?
3. How do prices emerge without central planning?

**Advanced**:
1. When might barter be preferable to money?
2. How does market thickness affect exchange efficiency?
3. What role does λ play in agent decision-making?
4. How would multiple currencies change dynamics?

**Experimental**:
1. Design a scenario where barter dominates money
2. Create conditions for hyperinflation
3. Model a bank run or liquidity crisis

## Assessment Ideas

### Homework Assignments
1. Modify demo scenario parameters and explain outcomes
2. Create new scenario demonstrating specific concept
3. Analyze telemetry data and write report
4. Compare VMT results to real-world markets

### Project Topics
1. Implement simple monetary policy
2. Add credit/debt to money system
3. Model currency competition
4. Study wealth inequality emergence

### Exam Questions
- Explain λ convergence mechanism
- Predict outcome of parameter changes
- Design scenario for given objective
- Interpret telemetry visualizations

## Extension Opportunities

### For Advanced Students
- Implement new money mode (e.g., logarithmic utility)
- Add inflation/deflation dynamics
- Create multi-currency system
- Model central bank interventions

### Research Projects
- Calibrate to real market data
- Test behavioral economics theories
- Explore cryptocurrency dynamics
- Study financial network effects

## Best Practices

### Running Demos
- Always use fixed seeds for reproducibility
- Start with simple scenarios
- Build complexity gradually
- Pause to explain key moments

### Common Pitfalls
- Too many agents (hard to track)
- Too few ticks (no convergence)
- Extreme parameters (unrealistic)
- Missing visualization (less engaging)

### Tips for Success
- Prepare telemetry database beforehand
- Have backup visualizations ready
- Create handouts with key parameters
- Record sessions for review