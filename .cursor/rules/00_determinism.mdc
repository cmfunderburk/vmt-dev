---
alwaysApply: true
---

# VMT Determinism Rules

## Core Principle
**ALL simulation runs with the same seed MUST produce identical outcomes.** This is non-negotiable for scientific validity.

## Mandatory Practices

### Random Number Generation
- Use ONLY the seeded RNG from scenario config: `self.rng` in agents, `world.rng` in engine
- NEVER use `random.random()`, `numpy.random`, or unseeded generators
- NEVER use current time, system state, or external data as randomness source

### Iteration Order
- ALWAYS sort collections before iteration: `for agent in sorted(agents, key=lambda a: a.id)`
- NEVER iterate over sets, dicts.keys(), or any unordered collection without sorting
- Agent processing order must be deterministic even if conceptually "simultaneous"

### Floating Point Discipline
- Round monetary values to 2 decimal places: `round(value, 2)`
- Use consistent rounding for all price/quantity calculations
- Store prices as integers (cents) when possible to avoid float accumulation errors

### State Mutations
- All state changes MUST go through Effects (MoveEffect, TradeEffect, etc.)
- NEVER directly modify world.grid, agent.inventory, or agent.position
- Effects are validated and applied in deterministic order during phase transitions

## Verification
Before considering any code complete, verify:
1. No unseeded randomness exists
2. All iterations are explicitly ordered
3. All state changes use Effects
4. Running twice with same seed produces identical telemetry