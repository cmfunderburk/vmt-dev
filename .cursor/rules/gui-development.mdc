---
globs: src/vmt_launcher/*.py,src/vmt_log_viewer/*.py,src/vmt_pygame/*.py,launcher.py,view_logs.py,main.py
description: Guidelines for GUI applications (PyQt5, Pygame) and entry points
---
## GUI Development Guidelines

### Entry Points
- CLI with Pygame viz: `python main.py scenarios/three_agent_barter.yaml --seed 42`
- GUI launcher: `python launcher.py`
- Log viewer: `python view_logs.py`

### Modules
- Launcher (PyQt5): `src/vmt_launcher/`
- Log Viewer (PyQt5): `src/vmt_log_viewer/`
- Pygame Renderer: `src/vmt_pygame/renderer.py`

### Launcher Features
- Scenario browsing/selection
- Seed configuration
- Launch simulations
- Scenario builder dialog

### Log Viewer Features
- Timeline scrubber
- Agent inspection
- Trade history
- CSV export

### Pygame Visualization
- Shows grid cells, agents, trades
- Camera scrolling for large grids
- Real-time info (tick count, stats)

### Patterns & Tips (PyQt5)
- Keep simulation logic separate from UI
- Use threads (`QThread`) for long sims; keep UI responsive
- Provide tooltips/help; handle empty data gracefully
- Validate inputs before creating scenarios

### Troubleshooting
- Display (WSL/remote): ensure X server; `export DISPLAY=:0`
- PyQt5 import: verify installation; reinstall if needed
- Audio warnings (ALSA): safe to ignore
- UI freezes: use `QThread` or periodically call `QApplication.processEvents()`

### References
- PyQt5 docs: https://doc.qt.io/qtforpython/
- Pygame docs: https://www.pygame.org/docs/
- Launcher: [src/vmt_launcher/](mdc:src/vmt_launcher/)
- Log viewer: [src/vmt_log_viewer/](mdc:src/vmt_log_viewer/)
- Renderer: [src/vmt_pygame/renderer.py](mdc:src/vmt_pygame/renderer.py)
