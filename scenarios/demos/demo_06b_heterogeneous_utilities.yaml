# Demo 06b: Heterogeneous Utilities with Money-Aware Pairing
# 
# This scenario extends demo_06 with a more diverse population:
# - 3 agents with CES utility (different complementarity levels)
# - 2 agents with Translog utility (variable elasticity of substitution)
# - 1 agent with Linear utility (perfect substitutes)
#
# Demonstrates:
# - Money-aware pairing across different utility function types
# - How different preferences interact in mixed exchange regime
# - Trading patterns between CES, Translog, and Linear agents
# - Heterogeneous lambda values creating monetary trade opportunities
#
# Key Observations:
# - Linear agent (Agent 5) has constant MRS, trades more predictably
# - Translog agents (3-4) have variable elasticity based on inventory levels
# - CES agents (0-2) maintain constant elasticity patterns
# - Lambda heterogeneity creates profitable monetary trades across all types

schema_version: 1
name: "demo_06b_heterogeneous_utilities"
N: 12
agents: 6

params:
  exchange_regime: "mixed"  # Allow all trade types: A↔B, A↔M, B↔M
  vision_radius: 12         # See entire grid
  interaction_radius: 1     # Must be adjacent to trade
  move_budget_per_tick: 1   # Move 2 cells per tick
  beta: 0.95                # Distance discount factor
  dA_max: 30                # Max trade size
  epsilon: 0.000000001      # 1e-9 (YAML requires decimal notation)
  money_scale: 1            # Money in whole units
  money_mode: quasilinear
  spread: 0.0
  forage_rate: 1
  trade_cooldown_ticks: 5

# Six agents with diverse utility functions
# Agents 0-2: CES utility (from original demo_06)
# Agents 3-4: Translog utility (variable elasticity)
# Agent 5: Linear utility (perfect substitutes)

utilities:
  mix:
    # Agent 0: CES, strong preference for A
    - type: "ces"
      weight: 0.167  # 1/6
      params:
        rho: 0.9
        wA: 0.8      
        wB: 0.2
    
    # Agent 1: CES, strong preference for B
    - type: "ces"
      weight: 0.167  # 1/6
      params:
        rho: 0.5
        wA: 0.2      
        wB: 0.8
    
    # Agent 2: CES, balanced with complementarity
    - type: "ces"
      weight: 0.166  # 1/6
      params:
        rho: -0.5
        wA: 0.7      
        wB: 0.3
    
    # Agent 3: Translog, moderate complementarity
    - type: "translog"
      weight: 0.167  # 1/6
      params:
        alpha_0: 0.0
        alpha_A: 0.6
        alpha_B: 0.4
        beta_AA: -0.15   # Diminishing returns in A
        beta_BB: -0.10   # Diminishing returns in B
        beta_AB: 0.08    # Positive: weak complementarity
    
    # Agent 4: Translog, substitutes with asymmetry
    - type: "translog"
      weight: 0.167  # 1/6
      params:
        alpha_0: 0.0
        alpha_A: 0.4
        alpha_B: 0.6
        beta_AA: -0.08
        beta_BB: -0.12
        beta_AB: -0.05   # Negative: mild substitutes
    
    # Agent 5: Linear, perfect substitutes
    - type: "linear"
      weight: 0.166  # 1/6
      params:
        vA: 2.0   # Values A at 2 utils per unit
        vB: 1.5   # Values B at 1.5 utils per unit

# Starting inventories with heterogeneous endowments and lambda values
# Lambda heterogeneity creates profitable monetary trade opportunities
#
# Agent 0: Wants A, high λ (2.0) → cheap monetary seller
# Agent 1: Wants B, low λ (0.5) → expensive monetary buyer
# Agent 2: Balanced, medium λ (1.0)
# Agent 3: Translog, high λ (1.8) → cheap monetary seller
# Agent 4: Translog, low λ (0.6) → expensive monetary buyer
# Agent 5: Linear, medium λ (1.2)

initial_inventories:
  A: [50, 200, 100, 80, 150, 120]    # Varied endowments
  B: [200, 50, 100, 120, 70, 110]    # Complementary to A
  M: [1000, 1000, 500, 800, 900, 700] # All have money
  lambda_money: [2.0, 0.5, 1.0, 1.8, 0.6, 1.2]  # Heterogeneous money valuations

# Position agents in a line for easy observation
# Adjacent pairs can trade immediately
agent_positions:
  - [6, 6]    # Agent 0 (CES, wants A, high λ)
  - [6, 7]    # Agent 1 (CES, wants B, low λ) - adjacent to 0
  - [6, 8]    # Agent 2 (CES, balanced) - adjacent to 1
  - [7, 6]    # Agent 3 (Translog, complements, high λ) - adjacent to 0
  - [7, 7]    # Agent 4 (Translog, substitutes, low λ) - adjacent to 1 & 3
  - [7, 8]    # Agent 5 (Linear) - adjacent to 2 & 4

resource_seed:
  density: 0.1  # Minimal resources (trade-focused scenario)
  amount: 5

# Expected Behavior:
# ==================
#
# Monetary Trade Opportunities (high λ vs low λ):
# - Agent 0 (λ=2.0) and Agent 3 (λ=1.8): cheap monetary sellers
# - Agent 1 (λ=0.5) and Agent 4 (λ=0.6): expensive monetary buyers
# - Large price spreads create profitable B↔M and A↔M trades
#
# Utility Function Interaction Patterns:
#
# 1. CES Agents (0-2):
#    - Constant elasticity of substitution
#    - Predictable trading ratios based on rho parameter
#    - Agent 0 (rho=0.9): mild substitutes, flexible trading
#    - Agent 1 (rho=0.5): moderate substitutes
#    - Agent 2 (rho=-0.5): complements, prefers balanced bundles
#
# 2. Translog Agents (3-4):
#    - Variable elasticity depends on inventory levels
#    - Agent 3: Complementarity (beta_AB > 0) means prefers balanced growth
#    - Agent 4: Mild substitutability (beta_AB < 0), more flexible
#    - MRS changes as they trade, creating dynamic patterns
#
# 3. Linear Agent (5):
#    - Constant MRS = vA/vB = 2.0/1.5 ≈ 1.33
#    - Always willing to trade A for B at rate 1.33:1
#    - Most predictable trading behavior
#    - Indifferent to bundle composition (only total value matters)
#
# Expected Trading Patterns:
# - High-λ sellers (0, 3) offer cheap monetary prices
# - Low-λ buyers (1, 4) bid high monetary prices
# - Linear agent (5) provides arbitrage when MRS differs from prices
# - Translog agents adapt trading based on inventory levels
#
# Interesting Comparisons:
# - Compare trade frequency by utility type
# - Observe how Translog MRS changes over time vs. constant CES/Linear
# - Track which agents prefer monetary vs. barter trades
#
# To observe:
# ===========
# 1. Run: python main.py scenarios/demos/demo_06b_heterogeneous_utilities.yaml --max-ticks 50 --seed 42
# 2. Check trade distribution by utility type:
#    SELECT utility_type, COUNT(*) FROM trades 
#    JOIN agent_snapshots ON trades.buyer_id = agent_snapshots.agent_id 
#    GROUP BY utility_type;
# 3. Compare monetary vs barter by agent:
#    SELECT buyer_id, exchange_pair_type, COUNT(*) FROM trades 
#    GROUP BY buyer_id, exchange_pair_type;
# 4. Track Translog MRS evolution:
#    SELECT tick, agent_id, ask_A_in_B FROM agent_snapshots 
#    WHERE agent_id IN (3, 4) ORDER BY agent_id, tick;
# 5. Verify Linear agent constant MRS:
#    SELECT ask_A_in_B FROM agent_snapshots WHERE agent_id = 5;
#    → Should stay approximately constant at 1.33
#
# Research Questions:
# ===================
# - Do Translog agents trade more frequently early (when elasticity high)?
# - Does Linear agent act as market maker due to constant MRS?
# - How does lambda heterogeneity interact with utility function differences?
# - Which utility types prefer monetary vs barter trades?

